<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.logistics.erp.dao.DashboardMapper">

	<!-- 당일 입고 건수 조회 -->
	<select id="getTodayInboundCount" resultType="int">
		SELECT COUNT(*) 
		FROM inbound 
		WHERE DATE(created_date) = CURDATE()
		  AND status = 'COMPLETED'
	</select>
	
	<!-- 당일 출고 건수 조회 -->
	<select id="getTodayOutboundCount" resultType="int">
		SELECT COUNT(*) 
		FROM outbound 
		WHERE DATE(created_date) = CURDATE()
		  AND status = 'COMPLETED'
	</select>
	
	<!-- 현재 총 재고 수량 조회 -->
	<select id="getCurrentStockCount" resultType="int">
		SELECT COALESCE(SUM(current_quantity), 0) 
		FROM inventory 
		WHERE status = 'ACTIVE'
	</select>
	
	<!-- 미처리 주문 건수 조회 -->
	<select id="getPendingOrderCount" resultType="int">
		SELECT COUNT(*) 
		FROM orders 
		WHERE status IN ('PENDING', 'CONFIRMED', 'PROCESSING')
	</select>
	
	<!-- 입고 예정 목록 조회 (최근 10건) -->
	<select id="getInboundSchedule" resultType="InboundScheduleVO">
		SELECT 
			i.inbound_id as inboundId,
			p.product_name as productName,
			i.quantity,
			i.scheduled_date as scheduledDate,
			i.status,
			s.supplier_name as supplier,
			u.user_name as manager
		FROM inbound i
		JOIN products p ON i.product_id = p.product_id
		JOIN suppliers s ON i.supplier_id = s.supplier_id
		JOIN users u ON i.manager_id = u.user_id
		WHERE i.status IN ('SCHEDULED', 'IN_PROGRESS')
		ORDER BY i.scheduled_date ASC
		LIMIT 10
	</select>
	
	<!-- 출고 지시서 목록 조회 (최근 10건) -->
	<select id="getOutboundOrders" resultType="OutboundOrderVO">
		SELECT 
			o.order_id as orderId,
			c.customer_name as customerName,
			p.product_name as productName,
			o.quantity,
			o.status,
			o.priority,
			u.user_name as manager
		FROM orders o
		JOIN customers c ON o.customer_id = c.customer_id
		JOIN products p ON o.product_id = p.product_id
		JOIN users u ON o.manager_id = u.user_id
		WHERE o.status IN ('CONFIRMED', 'PROCESSING', 'READY')
		ORDER BY o.created_date DESC
		LIMIT 10
	</select>
	
	<!-- 로케이션별 재고 현황 조회 -->
	<select id="getInventoryByLocation" resultType="InventoryLocationVO">
		SELECT 
			i.location_code as locationCode,
			p.product_name as productName,
			i.current_quantity as currentQuantity,
			i.min_quantity as minQuantity,
			i.max_quantity as maxQuantity,
			CASE 
				WHEN i.current_quantity = 0 THEN '없음'
				WHEN i.current_quantity &lt; i.min_quantity THEN '부족'
				WHEN i.current_quantity &gt; i.max_quantity * 0.9 THEN '주의'
				ELSE '정상'
			END as status,
			i.last_updated as lastUpdated,
			p.sku
		FROM inventory i
		JOIN products p ON i.product_id = p.product_id
		WHERE i.status = 'ACTIVE'
		ORDER BY 
			CASE 
				WHEN i.current_quantity = 0 THEN 1
				WHEN i.current_quantity &lt; i.min_quantity THEN 2
				WHEN i.current_quantity &gt; i.max_quantity * 0.9 THEN 3
				ELSE 4
			END,
			i.location_code
		LIMIT 20
	</select>

</mapper>