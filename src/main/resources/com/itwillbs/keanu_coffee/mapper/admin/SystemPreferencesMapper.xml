<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.admin.mapper.SystemPreferencesMapper">
	
	
	<!--전체부서목록 가져오기 -->
	<select id="getDepartmentInfo" resultType="DepartTeamRoleDTO" >
		SELECT *
		FROM department
	</select>
	
	<!-- 해당부서 팀목록 가져오기 -->
	<select id="getTeamsInfoByDepartmentIdx" resultType="DepartTeamRoleDTO">
		SELECT *
		FROM team
		WHERE department_idx = #{departmentIdx}
	</select>
	
	<!-- 해당부서 직책목록 가져오기 -->
	<select id="getRolesInfoByDepartmentIdx" resultType="DepartTeamRoleDTO">
		SELECT *
		FROM role
		WHERE department_idx = #{departmentIdx}
	</select>
	
	<!-- 부서추가하기 -->
	<insert id="insertDepartment"  parameterType="DepartTeamRoleDTO" useGeneratedKeys="true" keyProperty="idx">
		INSERT into department(department_name)
		VALUES(	#{departmentName})
	</insert>
	
	<!-- 팀추가하기 -->
	<insert id="insertTeam"  parameterType="DepartTeamRoleDTO" useGeneratedKeys="true" keyProperty="idx">
		INSERT into team(team_name, department_idx)
		VALUES(	#{teamName}, #{departmentIdx})
	</insert>
	
	<!-- 직책추가하기 -->
	<insert id="insertRole"  parameterType="DepartTeamRoleDTO" useGeneratedKeys="true" keyProperty="idx">
		INSERT into role(role_name, department_idx)
		VALUES(	#{roleName}, #{departmentIdx})
	</insert>

	<!-- 직책삭제하기 -->
	<delete id="deleteRole" parameterType="long" > 
		DELETE FROM role
		where idx = #{roleIdx}
	</delete>
	
	<!-- 직책,메뉴,권한 테이블이 가지고있는 직책 삭제 -->
	<delete id="deleteRoleMenuAuthoByRoleIdx">
		DELETE FROM role_menu_autho
		where role_idx = #{roleIdx}
	</delete>
	
	<!--  팀삭제 -->
	<delete id="deleteTeam">
		DELETE FROM team
		where idx = #{teamIdx}
	</delete>
	
	<!-- 부서에속한 팀목록 -->
	<select id="departTeamList" resultType="departTeamRoleDTO">
		SELECT idx
		from team
		where department_idx = #{departmentIdx}
	</select>
	
	<!-- 부서에속한 직책목록 -->
	<select id="departRoleList">
		SELECT idx
		from role
		where department_idx = #{departmentIdx}
	</select>
	
	<!-- 부서삭제 -->
	<delete id="deleteDepartment">
		DELETE FROM department
		where idx = #{departmentIdx}
	</delete>
	
	<!-- 부서이름 수정 -->
	<update id="updateDepartment">
		UPDATE department 
		SET department_name = #{departmentName}
		where idx = #{idx}
	</update>
	
	<!-- 팀이름변경 -->
	<update id="updateTeam">
		UPDATE team
		SET team_name = #{teamName}
		where idx = #{idx}
	</update>
	
	<!-- 직책이름변경 -->
	<update id="updateRole">
		UPDATE role
		SET role_name = #{roleName}
		where idx = #{idx}
	</update>
	
	<!-- 공급업체리스트 -->
	<select id="selectSuppliersInfo" resultType="SupplierProductContractDTO">
		SELECT 
		    s.idx,
		    s.supplier_name,
		    s.supplier_manager,
		    s.supplier_manager_phone,
		    s.supplier_zipcode,
		    s.supplier_address1,
		    s.supplier_address2,
		    -- 계약이 존재하면 1, 아니면 0
		    CASE WHEN COUNT(spc.idx) > 0 THEN 1 ELSE 0 END AS hasContract
		FROM 
		    supplier s
		LEFT JOIN 
		    supplier_product_contract spc
		    ON s.idx = spc.supplier_idx
		    AND spc.status = '활성'
		GROUP BY 
		    s.idx
		ORDER BY 
		    s.idx;
	</select>
	
	<!-- 등록된상품리스트 -->
	<select id="selectProductsInfo" resultType="SupplierProductContractDTO">
		SELECT *
		FROM product
	</select>
	
	<!-- 등록된상품리스트 -->
	<select id="selectSupplyContractsInfo" resultType="SupplierProductContractDTO">
		SELECT *
		FROM v_supplier_product_contract_details
	</select>
	
	<!-- 공급업체등록 -->
	<insert id="insertSupplier" parameterType="SupplierProductContractDTO" useGeneratedKeys="true" keyProperty="idx">
		INSERT INTO supplier
			(supplier_name
			, supplier_manager
			, supplier_manager_phone
			, supplier_zipcode
			, supplier_address1
			, supplier_address2)
		VALUES
			(#{supplierName}
			, #{supplierManager}
			, #{supplierManagerPhone}
			, #{supplierZipcode}
			, #{supplierAddress1}
			, #{supplierAddress2})
	</insert>
	
	<!-- 공급업체필터링 -->
	<select id="selectSupplierByStatus" resultType="SupplierProductContractDTO">
		SELECT * FROM supplier
    	WHERE status = #{dbStatus}
	</select>
	
	<!-- 공급업체의 활성화된 계약 갯수 -->
	<select id="countActiveContractsBySupplier" resultType="int" parameterType="long">
		SELECT COUNT(*)
		FROM supplier_product_contract
		WHERE supplier_idx = #{supplierIdx}
		AND status = '활성'
	</select>
	
	<!-- 공급업체 삭제 -->
	<delete id="deleteSupplierByIdx" parameterType="long">
		DELETE FROM supplier
		WHERE idx = #{supplierIdx}
	</delete>
	
	<!-- 공급업체상세정보 -->
	<select id="selectSupplierInfo" resultType="SupplierProductContractDTO">
		SELECT *
		FROM supplier
		WHERE idx = #{idx}
	</select>
	
	<!-- 공급업체정보수정 -->
	<update id="updateSupplier">
		UPDATE supplier
		SET
			supplier_name = #{supplierName}
			, supplier_manager = #{supplierManager}
			, supplier_manager_phone = #{supplierManagerPhone}
			, supplier_zipcode = #{supplierZipcode}
			, supplier_address1 = #{supplierAddress1}
		    , supplier_address2 = #{supplierAddress2}
		WHERE idx = #{idx}
	</update>

	




</mapper>
