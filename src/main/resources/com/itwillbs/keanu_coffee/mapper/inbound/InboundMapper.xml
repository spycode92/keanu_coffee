<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.inbound.mapper.InboundMapper">
	
	<!-- 입고 리스트 출력 -->
	<!-- ResultMap: SQL 결과를 DTO에 매핑 -->
    <resultMap id="InboundManagementResultMap" type="com.itwillbs.keanu_coffee.inbound.dto.InboundManagementDTO">
        <result column="발주번호" property="orderNumber" />
        <result column="입고Idx" property="ibwaitIdx" />
        <result column="입고번호" property="ibwaitNumber" />
        <result column="입고일자" property="arrivalDate" />
        <result column="공급업체" property="supplierName" />
        <result column="상태" property="inboundStatus" />
        <result column="품목수량" property="numberOfItems" />
        <result column="입고예정수량" property="quantity" />
        <result column="담당자" property="manager" />
        <result column="비고" property="note" />
    </resultMap>

    <!-- SELECT: 입고관리 리스트 조회 -->
    <select id="selectInboundWaitingInfo" resultMap="InboundManagementResultMap">
        SELECT 
            po.order_number                          AS 발주번호,
            iw.ibwait_idx                            AS 입고Idx,
            iw.ibwait_number                         AS 입고번호,
            iw.arrival_date                          AS 입고일자,
            s.supplier_name                          AS 공급업체,
            iw.inbound_status                        AS 상태,
            COUNT(DISTINCT poi.product_idx)          AS 품목수량,
            SUM(poi.quantity)                        AS 입고예정수량,
            iw.manager                               AS 담당자,
            iw.note                                  AS 비고
        FROM PURCHASE_ORDER po
        JOIN INBOUND_WAITING iw ON po.order_idx = iw.order_idx
        JOIN PURCHASE_ORDER_ITEM poi ON po.order_idx = poi.order_idx
        JOIN SUPPLIER s ON po.supplier_idx = s.supplier_idx
        GROUP BY po.order_number, iw.ibwait_idx, iw.ibwait_number, iw.arrival_date, iw.manager, iw.note, iw.inbound_status, s.supplier_name
        ORDER BY po.order_date DESC
    </select>
	
	
	<!-- inbound upgrade -->
	<select id="selectInboundDetailData" resultType="com.itwillbs.keanu_coffee.inbound.dto.InboundDetailDTO">
		SELECT 
		    iw.ibwait_idx                            AS ibwaitIdx,
		    iw.ibwait_number                         AS ibwaitNumber,
		    iw.arrival_date                          AS arrivalDate,
		    po.order_number                          AS orderNumber,
		    po.inbound_classification                AS inboundClassification,
		    s.supplier_name                          AS supplierName,
		    iw.manager                               AS managerName,
		    iw.inbound_location                      AS inboundLocation,
		    iw.number_of_items                       AS numberOfItems,
		    iw.quantity                              AS quantity,
		    iw.inbound_status                        AS inboundStatus,
		    SUM(poi.quantity * poi.unit_price * 1.1) AS totalPrice,
		    iw.note                                  AS note
		FROM INBOUND_WAITING iw
		JOIN PURCHASE_ORDER po ON iw.order_idx = po.order_idx
		JOIN SUPPLIER s ON po.supplier_idx = s.supplier_idx
		JOIN PURCHASE_ORDER_ITEM poi ON po.order_idx = poi.order_idx
		WHERE iw.ibwait_idx = #{ibwaitIdx }
		GROUP BY iw.ibwait_idx, iw.ibwait_number, iw.arrival_date, po.order_number, po.inbound_classification,
		         s.supplier_name, iw.manager, iw.inbound_location, iw.number_of_items,
		         iw.quantity, iw.inbound_status, iw.note;
	</select>
	
	<!-- Detail 상품 정보 조회 -->
	<select id="selectInboundProductDetail" resultType="com.itwillbs.keanu_coffee.inbound.dto.InboundProductDetailDTO">
		SELECT 
		    p.product_idx,
		    poi.lot_number,
		    p.product_name,
		    p.product_volume,
		    poi.quantity,
		    poi.unit_price,
		    (poi.quantity * poi.unit_price) AS amount,
		    (poi.quantity * poi.unit_price * 0.1) AS tax,
		    (poi.quantity * poi.unit_price * 1.1) AS totalPrice
		FROM PURCHASE_ORDER_ITEM poi
		JOIN PRODUCT p ON poi.product_idx = p.product_idx
		JOIN PURCHASE_ORDER po ON poi.order_idx = po.order_idx
		WHERE po.order_number = #{orderNumber}
		ORDER BY p.product_name ASC;
	</select>
	
	
</mapper>