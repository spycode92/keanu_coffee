<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.outbound.mapper.OutboundMapper">

	<!-- management 상품 조회 -->
	<select id="selectObManagementList" resultType="com.itwillbs.keanu_coffee.outbound.dto.OutboundManagementDTO">
	    SELECT 
	         oo.outbound_order_idx          AS outboundOrderIdx
	        ,ow.obwait_number               AS obwaitNumber
	        ,ow.departure_date              AS departureDate
	        ,ow.outbound_location           AS outboundLocation
	        ,f.franchise_name               AS franchiseName
	        ,oo.status                      AS status
	        ,COUNT(oi.outbound_order_item_idx) AS itemCount
	        ,SUM(oi.quantity)               AS totalQuantity
	        ,ow.manager                     AS manager
	        ,ow.note                        AS note
	    FROM OUTBOUND_WAITING ow
	    JOIN OUTBOUND_ORDER oo 
	      ON ow.outbound_order_idx = oo.outbound_order_idx
	    JOIN FRANCHISE f 
	      ON oo.franchise_idx = f.franchise_idx
	    LEFT JOIN OUTBOUND_ORDER_ITEM oi 
	      ON oo.outbound_order_idx = oi.outbound_order_idx
	    GROUP BY 
	         oo.outbound_order_idx
	        ,ow.obwait_number
	        ,ow.departure_date
	        ,ow.outbound_location
	        ,f.franchise_name
	        ,oo.status
	        ,ow.manager
	        ,ow.note
	    ORDER BY ow.departure_date DESC
	</select>
	
	<!-- 출고 기본정보 상세 조회 -->
    <select id="selectOutboundDetail" resultType="com.itwillbs.keanu_coffee.outbound.dto.OutboundManagementDTO">
	    SELECT 
	        ow.obwait_idx        AS obwaitIdx,
	        ow.obwait_number     AS obwaitNumber,
	        ow.departure_date 	 AS departureDate,
	        fo.franchise_name    AS franchiseName,
	        ow.manager           AS manager,
	        ow.outbound_location AS outboundLocation,
	        COUNT(foi.outbound_order_item_idx) AS itemCount,
	        SUM(foi.quantity)    AS totalQuantity,
	        oo.status            AS status,
	        ow.note              AS note
	    FROM OUTBOUND_WAITING ow
	    JOIN OUTBOUND_ORDER oo 
	      ON ow.outbound_order_idx = oo.outbound_order_idx
	    JOIN FRANCHISE fo 
	      ON oo.franchise_idx = fo.franchise_idx
	    JOIN OUTBOUND_ORDER_ITEM foi 
	      ON oo.outbound_order_idx = foi.outbound_order_idx
	    WHERE ow.obwait_number = #{obwaitNumber}
	      AND ow.outbound_order_idx = #{outboundOrderIdx}
	    GROUP BY ow.obwait_idx, ow.obwait_number, ow.departure_date, 
	             fo.franchise_name, ow.manager, ow.outbound_location,
	             oo.status, ow.note
	</select>



    <!-- 출고 품목 리스트 조회 -->
    <select id="selectOutboundProductDetail" resultType="com.itwillbs.keanu_coffee.outbound.dto.OutboundProductDetailDTO">
	    SELECT p.product_idx
	         , p.product_name
	         , p.product_volume
	         , foi.quantity
	    FROM OUTBOUND_ORDER_ITEM foi
	    JOIN PRODUCT p
	      ON foi.product_idx = p.product_idx
	    JOIN OUTBOUND_ORDER oo
	      ON foi.outbound_order_idx = oo.outbound_order_idx
	    WHERE foi.outbound_order_idx = #{outboundOrderIdx}
	    ORDER BY p.product_name ASC
	</select>
	
	<!-- 선택된 출고건을 '출고준비' 상태로 업데이트 -->
	<update id="updateStatusReady">
		UPDATE OUTBOUND_ORDER
		SET status = '출고준비'
		   ,updated_at = NOW()
		WHERE outbound_order_idx IN
		<foreach collection="orderIdxList" item="idx" open="(" separator="," close=")">
			#{idx}
		</foreach>
	</update>
	
	<update id="updateStatusDispatchWait">
		UPDATE OUTBOUND_ORDER oo
		JOIN OUTBOUND_WAITING ow
		  ON ow.outbound_order_idx = oo.outbound_order_idx
		SET oo.status = '배차대기',
		    oo.updated_at = NOW()
		WHERE ow.obwait_number = #{obwaitNumber}
		  AND oo.outbound_order_idx = #{outboundOrderIdx}
		  AND oo.status = '출고준비'
	</update>
	
</mapper>
