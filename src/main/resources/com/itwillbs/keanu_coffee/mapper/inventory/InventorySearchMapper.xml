<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.inventory.mapper.InventorySearchMapper">
	
	<!-- 총 SKU: 서로 다른 상품 코드(product_idx) 개수 -->
    <select id="selectTotalSku" resultType="int">
        SELECT COUNT(DISTINCT product_idx)
        FROM INVENTORY
    </select>

    <!-- 총 재고 수량: 전체 quantity 합계 -->
    <select id="selectTotalQuantity" resultType="int">
        SELECT COALESCE(SUM(quantity), 0)
        FROM INVENTORY
    </select>
	
	<!-- 카테고리 목록 조회 -->
	<select id="selectCategoryList" parameterType="string" resultType="CommonCodeDTO">
	    SELECT
	        common_code_idx  AS commonCodeIdx,
	        common_code      AS commonCode,
	        common_code_name AS commonCodeName,
	        group_code       AS groupCode
	    FROM COMMON_CODE
	    WHERE group_code = #{groupCode}
	    ORDER BY common_code_name
	</select>
	
	<!-- 총 데이터 개수 -->
	<select id="selectInventoryCount" resultType="int">
	    SELECT COUNT(1)
	    FROM INVENTORY i
	    JOIN PRODUCT p 
	        ON i.product_idx = p.product_idx
	    JOIN RECEIPT_PRODUCT r 
	        ON i.receipt_product_idx = r.receipt_product_idx
	    LEFT JOIN SUPPLIER s 
	        ON r.supplier_idx = s.supplier_idx
	    LEFT JOIN WAREHOUSE_LOCATION w
	        ON i.location_idx = w.location_idx
	    LEFT JOIN COMMON_CODE c
	        ON p.category_idx = c.common_code_idx
	       AND c.group_code = 'CATEGORY'
	    <where>
	        <!-- 검색 키워드 -->
	        <if test="keyword != null and keyword != ''">
	            (p.product_name LIKE CONCAT('%', #{keyword}, '%')
	             OR CAST(p.product_idx AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
	             OR r.lot_number LIKE CONCAT('%', #{keyword}, '%'))
	        </if>
	
	        <!-- 로케이션명 -->
	        <if test="location != null and location != ''">
	            AND i.location_name = #{location}
	        </if>
	
	        <!-- 로케이션 유형 -->
	        <if test="locationType != null and locationType != '' and locationType != '전체'">
	            AND w.location_type = #{locationType} 
	        </if>
	
	        <!-- 날짜 조건 -->
	        <if test="mfgDate != null and mfgDate != '' and (expDate == null or expDate == '')">
	            <!-- 제조일자만 입력 시: 해당 일자 이상 -->
	            AND r.manufacture_date &gt;= #{mfgDate}
	        </if>
	        
	        <if test="expDate != null and expDate != '' and (mfgDate == null or mfgDate == '')">
	            <!-- 유통기한만 입력 시: 해당 일자 이하 -->
	            AND r.expiration_date &lt;= #{expDate}
	        </if>
	        
	        <if test="mfgDate != null and mfgDate != '' and expDate != null and expDate != ''">
	            <!-- 둘 다 입력 시: 구간 검색 -->
	            AND r.manufacture_date &gt;= #{mfgDate}
	            AND r.expiration_date &lt;= #{expDate}
	        </if>
	
	        <!-- 재고 상태 -->
	        <if test="stockStatus != null and stockStatus != '' and stockStatus != '전체'">
	            <choose>
	                <when test="stockStatus == 'EXPIRED'">
	                    AND r.expiration_date &lt; CURDATE()
	                </when>
	                <when test="stockStatus == 'WARN'">
	                    AND DATEDIFF(r.expiration_date, CURDATE()) BETWEEN 0 AND 60
	                </when>
	                <when test="stockStatus == 'OK'">
	                    AND r.expiration_date &gt; DATE_ADD(NOW(), INTERVAL 60 DAY)
	                    AND i.quantity &gt; 0
	                </when>
	            </choose>
	        </if>
	
	        <!-- ✅ 카테고리 필터 -->
	        <if test="category != null and category != '' and category != '전체'">
	            AND c.common_code_idx = #{category}
	        </if>
	    </where>
	</select>
	
	<!-- 재고 리스트 조회 -->
	<select id="selectReceiptProductList" resultType="map">
	    SELECT
	        i.inventory_idx,
	        i.receipt_product_idx,
	        r.lot_number,
	        r.manufacture_date,
	        r.expiration_date,
	        r.received_at,
	        i.quantity AS current_quantity,   
	        p.product_idx,
	        p.product_name,
	        p.category_idx,
	        c.common_code      AS categoryCode,
	        c.common_code_name AS categoryName,
	        i.location_name,                  
	        i.location_idx,
	        w.location_type,
	        s.supplier_name,
	        CASE
	            WHEN r.expiration_date &lt; CURDATE() THEN 'EXPIRED'
	            WHEN DATEDIFF(r.expiration_date, CURDATE()) BETWEEN 0 AND 60 THEN 'WARN'
	            ELSE 'OK'
	        END AS stockStatus
	    FROM INVENTORY i
	    JOIN RECEIPT_PRODUCT r 
	        ON i.receipt_product_idx = r.receipt_product_idx
	    JOIN PRODUCT p 
	        ON i.product_idx = p.product_idx
	    LEFT JOIN SUPPLIER s 
	        ON r.supplier_idx = s.supplier_idx
	    LEFT JOIN WAREHOUSE_LOCATION w 
	        ON i.location_idx = w.location_idx
	    LEFT JOIN COMMON_CODE c
	        ON p.category_idx = c.common_code_idx
	       AND c.group_code = 'CATEGORY'
	    <where>
	        <if test="keyword != null and keyword != ''">
	            (p.product_name LIKE CONCAT('%', #{keyword}, '%')
	             OR CAST(p.product_idx AS CHAR) LIKE CONCAT('%', #{keyword}, '%')
	             OR r.lot_number LIKE CONCAT('%', #{keyword}, '%'))
	        </if>
	        <if test="location != null and location != ''">
	            AND i.location_name = #{location}
	        </if>
	        <if test="locationType != null and locationType != '' and locationType != '전체'">
	            AND w.location_type = #{locationType}
	        </if>
	        
	        <!-- 날짜 조건 -->
	        <if test="mfgDate != null and mfgDate != '' and (expDate == null or expDate == '')">
	            <!-- 제조일자만 입력 시: 해당 일자 이상 -->
	            AND r.manufacture_date &gt;= #{mfgDate}
	        </if>
	        
	        <if test="expDate != null and expDate != '' and (mfgDate == null or mfgDate == '')">
	            <!-- 유통기한만 입력 시: 해당 일자 이하 -->
	            AND r.expiration_date &lt;= #{expDate}
	        </if>
	        
	        <if test="mfgDate != null and mfgDate != '' and expDate != null and expDate != ''">
	            <!-- 둘 다 입력 시: 구간 검색 -->
	            AND r.manufacture_date &gt;= #{mfgDate}
	            AND r.expiration_date &lt;= #{expDate}
	        </if>
	
	        <!-- 재고 상태 필터 -->
	        <if test="stockStatus != null and stockStatus != '' and stockStatus != '전체'">
	            <choose>
	                <when test="stockStatus == 'EXPIRED'">
	                    AND r.expiration_date &lt; CURDATE()
	                </when>
	                <when test="stockStatus == 'WARN'">
	                    AND DATEDIFF(r.expiration_date, CURDATE()) BETWEEN 0 AND 60
	                </when>
	                <when test="stockStatus == 'OK'">
	                    AND r.expiration_date &gt; DATE_ADD(NOW(), INTERVAL 60 DAY)
	                    AND i.quantity &gt; 0
	                </when>
	            </choose>
	        </if>
	
	        <!-- 카테고리 필터 -->
	        <if test="category != null and category != '' and category != '전체'">
	            AND c.common_code_idx = #{category}
	        </if>
	    </where>
	
	    <!-- 정렬 조건 -->
	    <choose>
	        <when test="sortOption == 'manufactureAsc'">
	            ORDER BY r.manufacture_date ASC
	        </when>
	        <when test="sortOption == 'manufactureDesc'">
	            ORDER BY r.manufacture_date DESC
	        </when>
	        <when test="sortOption == 'expireAsc'">
	            ORDER BY r.expiration_date ASC
	        </when>
	        <when test="sortOption == 'expireDesc'">
	            ORDER BY r.expiration_date DESC
	        </when>
	        <when test="qtySort == 'qtyDesc'">
	            ORDER BY COALESCE(i.quantity, 0) DESC
	        </when>
	        <when test="qtySort == 'qtyAsc'">
	            ORDER BY COALESCE(i.quantity, 0) ASC
	        </when>
	        <otherwise>
	            ORDER BY r.received_at DESC
	        </otherwise>
	    </choose>
	
	    LIMIT #{startRow}, #{listLimit}
	</select>
	
	<!-- ========= 재고 상세 모달창 (Ajax) ========= -->
	<!-- 재고 상세 -->
	<select id="selectInventoryDetail" parameterType="int" resultType="map">
	    SELECT r.receipt_product_idx,
	           r.lot_number,
	           DATE_FORMAT(r.manufacture_date, '%Y-%m-%d') AS manufacture_date,
	           DATE_FORMAT(r.expiration_date, '%Y-%m-%d') AS expiration_date,
	           p.product_idx,
	           p.product_name,
	           c.common_code_name AS category_name,                   -- 카테고리 이름 추가
	           s.supplier_name,
	           COALESCE(SUM(i.quantity), 0) AS current_quantity
	    FROM RECEIPT_PRODUCT r
	    JOIN PRODUCT p ON r.product_idx = p.product_idx
	    LEFT JOIN SUPPLIER s ON r.supplier_idx = s.supplier_idx
	    LEFT JOIN INVENTORY i ON r.receipt_product_idx = i.receipt_product_idx
	    LEFT JOIN COMMON_CODE c ON p.category_idx = c.common_code_idx  -- 조인
	    WHERE r.receipt_product_idx = #{receiptProductIdx}
	    GROUP BY r.receipt_product_idx
	</select>
	
	<!-- 로케이션 분포 -->
	<select id="selectLocationDistribution" parameterType="int" resultType="map">
	    SELECT w.location_name,
	           w.location_type,
	           i.quantity AS qty
	    FROM INVENTORY i
	    JOIN WAREHOUSE_LOCATION w ON i.location_idx = w.location_idx
	    WHERE i.receipt_product_idx = #{receiptProductIdx}
	</select>
	
</mapper>










