<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.common.mapper.PurchaseOrderMapper">
	<resultMap id="PurchaseOrderResultMap" type="com.itwillbs.keanu_coffee.common.dto.PurchaseOrderDTO">
	    <id     property="orderIdx"                column="주문_고유번호"/>
	    <result property="orderNumber"             column="발주번호"/>
	    <result property="supplierIdx"             column="공급업체_고유번호"/>
	    <result property="empIdx"                  column="발주요청자_고유번호"/>
	    <result property="orderDate"               column="발주일"/>
	    <result property="status"                  column="발주상태"/>
	    <result property="expectedArrivalDate"     column="예상입고일"/>
	    <result property="note"                    column="비고"/>
	    <result property="createdAt"               column="생성일시"/>
	    <result property="updatedAt"               column="수정일시"/>

	    <collection property="items" ofType="com.itwillbs.keanu_coffee.common.dto.PurchaseOrderItemDTO">
			<id     property="orderItemIdx"          column="발주상세_고유번호"/>
	      	<result property="orderIdx"              column="발주_고유번호"/>
	      	<result property="productIdx"            column="상품_고유번호"/>
	      	<result property="quantity"              column="발주수량"/>
	     	<result property="unitPrice"             column="단가"/>
	      	<result property="totalPrice"            column="총액"/>
	    </collection>
	</resultMap>

	<!-- select: 발주 + 발주상세 + 상품명 (AS는 한글) -->
	<select id="orderDetail" resultMap="PurchaseOrderResultMap">
		SELECT
		o.order_idx                 AS  주문_고유번호
		,o.order_number             AS  발주번호
		,o.supplier_idx             AS  공급업체_고유번호
		,o.emp_idx                  AS  발주요청자_고유번호
		,o.order_date               AS  발주일
		,o.status                   AS  발주상태
		,o.expected_arrival_date    AS  예상입고일
		,o.note                     AS  비고
		,o.created_at               AS  생성일시
		,o.updated_at               AS  수정일시
		,i.order_item_idx           AS  발주상세_고유번호
		,i.order_idx                AS  발주_고유번호
		,i.product_idx              AS  상품_고유번호
		,i.quantity                 AS  발주수량
		,i.unit_price               AS  단가
		,i.total_price              AS  총액
		FROM PURCHASE_ORDER o
		LEFT JOIN PURCHASE_ORDER_ITEM i ON o.order_idx = i.order_idx
		ORDER BY o.order_date DESC
	</select>
	
	<!-- select: 발주 + 발주상세 + 상품명 (AS는 한글) WHERE order_idx -->
	<select id="getOrderDetailByOrderIdx" resultMap="PurchaseOrderResultMap">
		SELECT
		o.order_idx                 AS  주문_고유번호
		,o.order_number             AS  발주번호
		,o.supplier_idx             AS  공급업체_고유번호
		,o.emp_idx                  AS  발주요청자_고유번호
		,o.order_date               AS  발주일
		,o.status                   AS  발주상태
		,o.expected_arrival_date    AS  예상입고일
		,o.note                     AS  비고
		,o.created_at               AS  생성일시
		,o.updated_at               AS  수정일시
		,i.order_item_idx           AS  발주상세_고유번호
		,i.order_idx                AS  발주_고유번호
		,i.product_idx              AS  상품_고유번호
		,i.quantity                 AS  발주수량
		,i.unit_price               AS  단가
		,i.total_price              AS  총액
		FROM PURCHASE_ORDER o
		LEFT JOIN PURCHASE_ORDER_ITEM i ON o.order_idx = i.order_idx
		WHERE o.order_idx = #{orderIdx}
		ORDER BY o.order_date DESC
	</select>
	
	<select id="selectTodaysPurchaseOrderNumbersInOrderToMakeNewPurchaseOrderNumber" resultType="String">
		SELECT
			order_number
		FROM
			PURCHASE_ORDER
		WHERE
			DATE(created_at) = CURDATE()
		ORDER BY 
			order_idx DESC
		LIMIT 1;		
	</select>
	
	<select id="selectLastMonthsDemand" resultType="com.itwillbs.keanu_coffee.inventory.dto.OutboundOrderItemDTO">
		SELECT 
			i.product_idx, 
		    round(sum(i.quantity) / #{daysInLastMonth}, 2) quantity
		FROM 
			OUTBOUND_ORDER_ITEM i 
		LEFT JOIN
			OUTBOUND_ORDER o 
		ON
			o.outbound_order_idx = i.outbound_order_idx
		WHERE 
			YEAR(o.requested_date) = #{year}
		  AND MONTH(o.requested_date) = #{month}
		GROUP BY
			i.product_idx
	
	</select>
	
	
	<select id="selectLastMonthsDemandItemsEveryDay" resultType="com.itwillbs.keanu_coffee.inventory.dto.OutboundOrderItemDTO">
		SELECT 
			i.product_idx, 
		    i.quantity
		FROM 
			OUTBOUND_ORDER_ITEM i 
		LEFT JOIN
			OUTBOUND_ORDER o 
		ON
			o.outbound_order_idx = i.outbound_order_idx
		WHERE 
			YEAR(o.requested_date) = #{year}
		  AND MONTH(o.requested_date) = #{month}
	
	</select>
	
	
	<select id="seletAvgDemandSameWeekOneYearAgo" resultType="com.itwillbs.keanu_coffee.inventory.dto.OutboundOrderItemDTO">
		SELECT 
			i.product_idx, 
		    round((sum(i.quantity) / 7) * #{beta}, 2) as 'quantity'
		FROM 
			OUTBOUND_ORDER_ITEM i 
		LEFT JOIN
			OUTBOUND_ORDER o 
		ON
			o.outbound_order_idx = i.outbound_order_idx
		WHERE 
			o.requested_date BETWEEN #{startDate} AND #{endDate}		
		GROUP BY
			i.product_idx
	
	</select>
	
	<select id="selectPercentOfWarehouseUsed" resultType="double">
		select 
		(SUM(CASE
		    WHEN p.product_volume = 3 THEN 17850 * i.quantity
		    WHEN p.product_volume = 4 THEN 17850 * i.quantity
		    WHEN p.product_volume = 5 THEN 24108 * i.quantity
		    WHEN p.product_volume = 6 THEN 60384 * i.quantity
		  END) / (SELECT SUM(volume) FROM WAREHOUSE_LOCATION)) 
		FROM INVENTORY i
		LEFT JOIN PRODUCT p
		ON p.product_idx = i.product_idx
	</select>
	
	<select id="selectInventoryQuantity" resultType="com.itwillbs.keanu_coffee.inventory.dto.OutboundOrderItemDTO">
		SELECT
			product_idx,
		    SUM(quantity) quantity
		FROM
			INVENTORY 
		GROUP BY 
			product_idx
		
	</select>
	<select id="selectInboundWaitingQuantity" resultType="com.itwillbs.keanu_coffee.inventory.dto.OutboundOrderItemDTO">
		SELECT
			p.product_idx,
		    SUM(i.quantity) quantity
		FROM
			INBOUND_WAITING i 
		LEFT JOIN
			PURCHASE_ORDER_ITEM p
		ON 
			p.order_idx = i.order_idx
		WHERE
        	DATE(i.expected_arrival_date) >= CURDATE()
		GROUP BY 
			product_idx;
	</select>
	
	<select id="selectContracts" resultType="com.itwillbs.keanu_coffee.inventory.dto.SupplierProductContractDTO">
		SELECT
			product_idx,
			min_order_quantity,
			max_order_quantity
		FROM
			SUPPLIER_PRODUCT_CONTRACT
	
	</select>
	
	<select id="selectProductAndSuppplier" resultType="com.itwillbs.keanu_coffee.inventory.dto.SupplierProductContractDTO">
		SELECT
			product_idx,
			supplier_idx,
			contract_price			
		FROM
			SUPPLIER_PRODUCT_CONTRACT
		WHERE status = '활성'
	</select>
	<insert id="insertProductOrder">
		INSERT INTO PURCHASE_ORDER (
			order_idx
			, order_number
			, supplier_idx
			, order_date
			, expected_arrival_date
		) VALUES
		(#{orderIdx}, #{orderNumber}, #{supplierIdx}, #{orderDate}, #{expectedArrivalDate})  
		
	</insert>
	
	<insert id="insertProductOrderItem">
		INSERT INTO PURCHASE_ORDER_ITEM (
			order_idx
			, product_idx
			, quantity	
			, unit_price
			, total_price		
		) VALUES
		(#{orderIdx}, #{productIdx}, #{quantity}, #{contractPrice}, round(#{quantity} * #{contractPrice}))
		
	</insert>

	<insert id="insertInboundWaiting">
		INSERT INTO INBOUND_WAITING (
			ibwait_number
			, order_idx
			, quantity
			, number_of_items
			, expected_arrival_date		
		) VALUES
		(#{inboundWaitingNumber}, #{orderIdx}, #{quantity}, #{numberOfItems}, #{expectedArrivalDate})
	</insert>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

</mapper>