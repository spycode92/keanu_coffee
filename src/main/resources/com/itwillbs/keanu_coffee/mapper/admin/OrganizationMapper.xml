<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.admin.mapper.OrganizationMapper">
	<!--전체부서목록 가져오기 -->
	<select id="getDepartmentInfo" resultType="DepartmentDTO" >
		SELECT 
			common_code_idx as department_idx,
			common_code_name as department_name
		FROM COMMON_CODE
		WHERE group_code = 'DEPARTMENT'
	</select>
	<!-- 해당부서 팀목록 가져오기 -->
	<select id="getTeamsInfoByDepartmentIdx" resultType="TeamDTO">
		SELECT *
		FROM TEAM
		WHERE department_idx = #{departmentIdx}
	</select>
	<!-- 해당부서 직책목록 가져오기 -->
	<select id="getRolesInfoByDepartmentIdx" resultType="RoleDTO">
		SELECT *
		FROM ROLE
		WHERE department_idx = #{departmentIdx}
	</select>
	<!-- 부서추가하기 -->
	<insert id="insertDepartment"  parameterType="DepartmentDTO" useGeneratedKeys="true" keyProperty="departmentIdx">
		INSERT INTO COMMON_CODE(common_code_name, group_code, common_code)
		VALUES(#{departmentName}, 'DEPARTMENT', #{departmentName})
	</insert>
	<!-- 팀추가하기 -->
	<insert id="insertTeam"  parameterType="TeamDTO" useGeneratedKeys="true" keyProperty="teamIdx">
		INSERT INTO TEAM(team_name, department_idx)
		VALUES(#{teamName}, #{departmentIdx})
	</insert>
	<!-- 직책추가하기 -->
	<insert id="insertRole"  parameterType="RoleDTO" useGeneratedKeys="true" keyProperty="roleIdx">
		INSERT INTO ROLE(role_name, department_idx)
		VALUES(#{roleName}, #{departmentIdx})
	</insert>
	<!-- 직책삭제하기 -->
	<delete id="deleteRole" parameterType="roleDTO" > 
		DELETE FROM ROLE
		where role_idx = #{roleIdx}
	</delete>
	<!-- 직책,메뉴,권한 테이블이 가지고있는 직책 삭제 -->
	<delete id="deleteRoleMenuAuthoByRoleIdx">
		DELETE FROM ROLE_BOARD_AUTHO
		where role_idx = #{roleIdx}
	</delete>
	<!--  팀삭제 -->
	<delete id="deleteTeam">
		DELETE FROM TEAM
		where team_idx = #{teamIdx}
	</delete>
	<!-- 부서에속한 팀목록 -->
	<select id="departTeamList" resultType="TeamDTO">
		SELECT team_idx
		from TEAM
		where department_idx = #{departmentIdx}
	</select>
	<!-- 부서에속한 직책목록 -->
	<select id="departRoleList" resultType="RoleDTO">
		SELECT role_idx
		from ROLE
		where department_idx = #{departmentIdx}
	</select>
	<!-- 부서삭제 -->
	<delete id="deleteDepartment">
		DELETE FROM COMMON_CODE
		where common_code_idx = #{departmentIdx}
	</delete>
	<!-- 부서이름 수정 -->
	<update id="updateDepartment">
		UPDATE COMMON_CODE 
		SET common_code_name = #{departmentName}
		where common_code_idx = #{departmentIdx}
	</update>
	<!-- 팀이름변경 -->
	<update id="updateTeam">
		UPDATE TEAM
		SET team_name = #{teamName}
		where team_idx = #{teamIdx}
	</update>
	<!-- 직책이름변경 -->
	<update id="updateRole">
		UPDATE ROLE
		SET role_name = #{roleName}
		where role_idx = #{roleIdx}
	</update>
	<!-- 부서,팀,직책 정보 가져오기 -->
	<select id="getOrgData" resultType="Map">
		SELECT
		c.common_code_idx
		, c.common_code_name
		, r.role_idx
		, r.role_name
		, t.team_idx
		, t.team_name
		FROM COMMON_CODE c
		LEFT JOIN ROLE r
		ON c.common_code_idx = r.department_idx
		LEFT JOIN TEAM t
		ON c.common_code_idx = t.department_idx
		WHERE c.group_code = 'DEPARTMENT'
	</select>
	<!-- 권한목록 조회 -->
	<select id="selectAuthorityList" resultType="commonCodeDTO">
		SELECT common_code_idx
		, common_code
		, common_code_name
		FROM COMMON_CODE
		WHERE group_code = "AUTHORITY"
	</select>
	
	<!-- 직책별 권한조회 -->
	<select id="selectAuthorityInfo" resultType="map">
		SELECT autho_idx
		FROM ROLE_AUTHO
		WHERE role_idx = #{roleIdx}
	</select>
	
	<!-- 직책별 권한삭제 -->
	<delete id="deleteAuthorities">
		DELETE FROM ROLE_AUTHO 
    	WHERE role_idx = #{roleIdx}
    	AND autho_idx IN
    <foreach collection="removedAuthorities" item="authoIdx" open="(" separator="," close=")">
        #{authoIdx}
    </foreach>
	</delete>
	
	<!-- 직책별 권한 추가 -->
	<insert id="insertAuthorities">
		INSERT IGNORE 
			INTO ROLE_AUTHO (
				role_idx, autho_idx
			) VALUES
	    <foreach collection="addedAuthorities" item="authoIdx" separator=",">
	        (#{roleIdx}, #{authoIdx})
	    </foreach>
	</insert>
	
	<!-- 권한 이름 수정 -->
	<update id="updateAuthoName">
		UPDATE COMMON_CODE
		SET
			common_code_name = #{authoName}
		WHERE
			common_code_idx = #{authoIdx} 
	</update>
	
	<!-- 권한을 가진 직책수 확인 -->
	<select id="countRoleAutho" parameterType="int" resultType="int">
		SELECT count(*)
		FROM ROLE_AUTHO
		WHERE autho_idx = #{authoIdx}
	</select>
	
	<!-- 권한을 삭제 -->
	<delete id="deleteAutho" parameterType="int">
		DELETE FROM COMMON_CODE
		WHERE common_code_idx = #{authoIdx}
	</delete>
	
	<!-- 권한 추가 -->
	<insert id="insertAutho" >
		INSERT INTO COMMON_CODE(group_code, common_code, common_code_name)
		VALUES ('AUTHORITY', #{authoCode}, #{authoName})
	</insert>
	
	<!-- 부서조회 -->
	<resultMap id="commonCodeResultMap" type="CommonCodeDTO">
	    <result property="commonCodeIdx" column="common_code_idx"/>
	    <result property="commonCodeName" column="common_code_name"/>
	</resultMap>
	<select id="selectDept" resultMap="commonCodeResultMap" flushCache="true">
		SELECT 
			common_code_idx, common_code_name
		FROM COMMON_CODE
		WHERE common_code_idx = #{departmentIdx}
	</select>
	
	
</mapper> 