<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itwillbs.keanu_coffee.inventory.mapper.InventoryMoveMapper">
	
	<!-- 상품의존재 유무 체크 -->
	<select id="selectProductByLotNumber" resultType="int">
		SELECT COUNT(*)
		FROM PRODUCT p
		LEFT JOIN INVENTORY i
		ON i.product_idx = p.product_idx
		WHERE i.lot_number = #{lotNumber}
	</select>
	
	
	<!-- 상품의 사진 선택 -->
	<select id="selectProductFileByLotNum" resultType="fileDTO">
		SELECT f.file_idx
		FROM INVENTORY i
		LEFT JOIN FILE f
		ON f.target_table = 'PRODUCT'
		AND f.target_table_idx = i.product_idx
		WHERE i.lot_number = #{lotNumber}
	</select>
	
	<!-- 로케이션 존재유무 체크 -->
	<select id="selectCountLocationByLocationName" resultType="int"> 
		SELECT COUNT(*)
		FROM WAREHOUSE_LOCATION
		WHERE location_name = #{locationName}
	</select>
	
	<!-- 로케이션에 있는 재고 목록 조회 -->
	<select id="selectInventoryListByLocationName" resultType="com.itwillbs.keanu_coffee.inventory.dto.InventoryDTO">
		SELECT *
		FROM INVENTORY
		WHERE
		location_name = #{locationName}
	</select>
	
	<!-- 로케이션이름과 lot번호로 재고정보조회 -->
	<select id="selectInventoryByLocationNAmeAndLotNumber" resultType="com.itwillbs.keanu_coffee.inventory.dto.InventoryDTO">
		SELECT *
		FROM INVENTORY
		WHERE
			location_name = #{locationName}
		AND
			lot_number = #{lotNumber}
	</select>
	
	<!-- 로케이션정보 조회 -->
	<select id="selectLocationByLocationName" resultType="com.itwillbs.keanu_coffee.inventory.dto.WarehouseLocationDTO">	
		SELECT 
			location_idx AS locationIdx
			, location_name AS locationName
		FROM WAREHOUSE_LOCATION
		WHERE location_name = #{empNo}
	</select>
	
	<!-- 재고입력 -->
	<insert id="insertInventory">
		INSERT INTO INVENTORY
		(receipt_product_idx
		, location_idx
		, location_name
		, product_idx
		, quantity
		, lot_number
		, manufacture_date
		expiration_date)
		VALUES
		(#{receiptProductIdx}
		, #{locationIdx}
		, #{locationName}
		, #{productIdx}
		, #{quantity}
		, #{lotNumber}
		, #{manufactureDate}
		, #{expirationDate})
	</insert>
	
	<!-- 재고수량업데이트 -->
	<update id="updateInventoryQuantity">
		UPDATE INVENTORY
		SET quantity = #{quantity}
		WHERE `inventory_idx` = #{inventoryIdx}
	</update>





</mapper>